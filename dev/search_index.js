var documenterSearchIndex = {"docs":
[{"location":"#CommonLicenses.jl","page":"CommonLicenses.jl","title":"CommonLicenses.jl","text":"","category":"section"},{"location":"","page":"CommonLicenses.jl","title":"CommonLicenses.jl","text":"Standard licenses for open source software, writing, media, and more!","category":"page"},{"location":"#Installation","page":"CommonLicenses.jl","title":"Installation","text":"","category":"section"},{"location":"","page":"CommonLicenses.jl","title":"CommonLicenses.jl","text":"Choose one of the two lines below!","category":"page"},{"location":"","page":"CommonLicenses.jl","title":"CommonLicenses.jl","text":"julia> import Pkg; Pkg.add(\"CommonLicenses\")\n\njulia> ]add CommonLicenses","category":"page"},{"location":"#Usage","page":"CommonLicenses.jl","title":"Usage","text":"","category":"section"},{"location":"","page":"CommonLicenses.jl","title":"CommonLicenses.jl","text":"Conveniently add an open source license to your executable document!","category":"page"},{"location":"","page":"CommonLicenses.jl","title":"CommonLicenses.jl","text":"using CommonLicenses: MIT\n\nMIT(copyright=\"Joey\")","category":"page"},{"location":"docstrings/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"docstrings/","page":"Reference","title":"Reference","text":"All docstrings!","category":"page"},{"location":"docstrings/","page":"Reference","title":"Reference","text":"Modules = [\n    CommonLicenses,\n]\nOrder = [:module, :type, :function, :constant]","category":"page"},{"location":"docstrings/#CommonLicenses.CommonLicenses","page":"Reference","title":"CommonLicenses.CommonLicenses","text":"Display open-source software (and other) licenses inline in your executable documents!\n\nExtended help\n\nREADME\n\n(Image: Tests) (Image: Docs)\n\nCommonLicenses.jl\n\nExecutable licenses for executable documents!\n\nInstallation\n\nChoose one of the lines below!\n\nimport Pkg; Pkg.add(\"CommonLicenses\")\n\n# In a Julia REPL\n]add CommonLicenses\n\nMotivation\n\nWhy does this exist?\n\nImagine you're writing a blog post. Or a Pluto notebook. Or a Jupyter notebook. Or whatever! You're writing words alongside content, and you'd like to license your work. The license needs to stand alone with your document; the \"naive\" solution is to find the contents of your standard license file, and paste the license into a block of text somewhere in your document. Cool. Two weeks later you're writing another blog post, or whatever. You need to re-find the contents of this license. Not a big deal, but this gets a bit cumbersome, right?\n\nEnter: CommonLicenses.jl. This package provides every standard license tracked by the SPDX License List, so all you need to do is install this package, and print your desired license wherever you want it!\n\nUsage\n\nTry it out for yourself!\n\njulia> using CommonLicenses\n\njulia> using CommonLicenses: MIT, Unlicense\n\njulia> MIT()\n\njulia> Unlicense()\n\njulia> CommonLicenses.text(MIT(copyright=\"Joe(y)\"))\n\njulia> CommonLicenses.name(License(\"CC-BY-4.0\"))\n\nCredits\n\nBuilt on top of lots of helpful projects!\n\nThis package was developed independently of PkgLicenses.jl, though it does look like JuliaPackaging got there first! This package adds goodies on top of the functionality of PkgLicenses.jl, including MIME type support, and licenses for non-software projects such as Creative Commons.\n\nThe SPDX License List is used to fetch the contents for each requested license. The GitHub License API is used to find additional metadata for each license, if available.\n\nLicense\n\nMIT License\n\nCopyright (c) 2023 Joe Carpinelli\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nExports\n\nLicense\n\nImports\n\nBase\nCore\nDates\nDocStringExtensions\nHTTP\nJSON\nScratch\n\n\n\n\n\n","category":"module"},{"location":"docstrings/#CommonLicenses.AbstractLicense","page":"Reference","title":"CommonLicenses.AbstractLicense","text":"abstract type AbstractLicense\n\nA supertype for all licenses.\n\nExtended Help\n\nAll License subtypes should have the following methods defined:\n\nCommonLicenses.name(license)::AbstractString\nCommonLicenses.spdx(license)::AbstractString\nCommonLicenses.text(license)::AbstractString\n\nThe following methods may be optionally defined.\n\nCommonLicenses.conditions(license)::AbstractSet{<:AbstractString}\nCommonLicenses.permissions(license)::AbstractSet{<:AbstractString}\nCommonLicenses.limitations(license)::AbstractSet{<:AbstractString}\nCommonLicenses.arguments(license)::NTuple{N,Pair{<:AbstractString,Symbol}} where {N}\nCommonLicenses.defaults(license)::NTuple{N,Pair{Symbol,<:Any}} where {N}\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#CommonLicenses.License","page":"Reference","title":"CommonLicenses.License","text":"struct License{ID, C<:(Union{Missing, var\"#s12\"} where var\"#s12\"<:(AbstractSet{<:AbstractString})), P<:(Union{Missing, var\"#s14\"} where var\"#s14\"<:(AbstractSet{<:AbstractString})), L<:(Union{Missing, var\"#s16\"} where var\"#s16\"<:(AbstractSet{<:AbstractString}))} <: CommonLicenses.AbstractLicense\n\nMetadata for a legal license. When an instance of this type is Base.shown, the content is displayed in a software-license-typical format: i.e. as you would see in a software repository's LICENSE file.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#CommonLicenses.License-Tuple{Union{AbstractString, Symbol}, Vararg{Pair{<:AbstractString}}}","page":"Reference","title":"CommonLicenses.License","text":"Construct a license using the SPDX identifier, and any modifications you wish to make to the license text.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#CommonLicenses.License-Union{Tuple{}, Tuple{ID}} where ID","page":"Reference","title":"CommonLicenses.License","text":"Construct a license, using keyword arguments to replace the keywords specified by arguments(License{ID}).\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#CommonLicenses.arguments","page":"Reference","title":"CommonLicenses.arguments","text":"Specify keywords to replace within the license's text.\n\nExtended Help\n\nSome licenses include small bits of custom information, i.e. the date and name at the top of many MIT licenses. Defining this method for a license type allows a user to specify this information in the argument of the license constructor. If no specific keywords are provided, a fallback method returns an empty NamedTuple.\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#CommonLicenses.conditions","page":"Reference","title":"CommonLicenses.conditions","text":"Return a hint at the conditions of the license. This is provided through GitHub's License API, which itself depends on the licensee Ruby project.\n\nExtended Help\n\nReferences\n\nGitHub License Endpoint: https://api.github.com/licenses\nGitHub License API Docs: https://docs.github.com/en/rest/licenses#get-a-license\nGitHub Page for licensee: https://github.com/licensee/licensee\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#CommonLicenses.defaults","page":"Reference","title":"CommonLicenses.defaults","text":"Specify default values for each license argument.\n\nExtended Help\n\nSee also, CommonLicenses.arguments.\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#CommonLicenses.limitations","page":"Reference","title":"CommonLicenses.limitations","text":"Return a hint at the limitations of the license. This is provided through GitHub's License API, which itself depends on the licensee Ruby project.\n\nExtended Help\n\nReferences\n\nGitHub License Endpoint: https://api.github.com/licenses\nGitHub License API Docs: https://docs.github.com/en/rest/licenses#get-a-license\nGitHub Page for licensee: https://github.com/licensee/licensee\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#CommonLicenses.name","page":"Reference","title":"CommonLicenses.name","text":"Return the official name for the license.\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#CommonLicenses.permissions","page":"Reference","title":"CommonLicenses.permissions","text":"Return a hint at the permissions of the license. This is provided through GitHub's License API, which itself depends on the licensee Ruby project.\n\nExtended Help\n\nReferences\n\nGitHub License Endpoint: https://api.github.com/licenses\nGitHub License API Docs: https://docs.github.com/en/rest/licenses#get-a-license\nGitHub Page for licensee: https://github.com/licensee/licensee\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#CommonLicenses.required-Tuple{CommonLicenses.AbstractLicense}","page":"Reference","title":"CommonLicenses.required","text":"required(license)\n\n\nReturn all required arguments.\n\nExtended Help\n\nSee also, CommonLicenses.arguments.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#CommonLicenses.spdx","page":"Reference","title":"CommonLicenses.spdx","text":"Return the SPDX identifier for the license.\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#CommonLicenses.text","page":"Reference","title":"CommonLicenses.text","text":"Return the text of the license, with replacement arguments specified if necessary.\n\n\n\n\n\n","category":"function"}]
}
